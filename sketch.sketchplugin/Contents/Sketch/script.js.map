{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/script.js"],"names":["context","doc","document","artboard","currentPage","currentArtboard","artboardname","name","showMessage","replace","filename","NSTemporaryDirectory","htmlContent","NSString","stringWithString_","doTestSimpleImage","pptx","PptxGenJS","slide","addNewSlide","addImage","path","x","y","w","h","save","filepath","dataUsingEncoding_","NSUTF8StringEncoding","writeToFile_atomically_","file","NSURL","fileURLWithPath","NSWorkspace","sharedWorkspace","openFile"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;AClFA,+DAAe,UAASA,OAAT,EAAkB;AAE/B,MAAIC,MAAMD,QAAQE,QAAlB;AACA,MAAIC,WAAWF,IAAIG,WAAJ,GAAkBC,eAAlB,MAAuCJ,IAAIG,WAAJ,EAAtD;AAEA,MAAIE,eAAeH,SAASI,IAAT,EAAnB;AACAP,UAAQE,QAAR,CAAiBM,WAAjB,CAA6B,eAA7B;AACAF,iBAAeA,aAAaG,OAAb,CAAqB,qBAArB,EAA2C,EAA3C,CAAf;AACA,MAAIC,WAAWC,yBAAyBL,YAAzB,GAAwC,MAAvD;AACA,MAAIM,cAAcC,SAASC,iBAAT,CAChB,unBAAqnB,SAASC,iBAAT,GAA6B;AAChpB,QAAIC,OAAO,IAAIC,SAAJ,EAAX;AACA,QAAIC,QAAQF,KAAKG,WAAL,EAAZ,CAFgpB,CAGhpB;;AACAD,UAAME,QAAN,CAAe;AAAEC,YAAKX,QAAP;AAAiBY,SAAE,CAAnB;AAAsBC,SAAE,CAAxB;AAA2BC,SAAE,GAA7B;AAAkCC,SAAE;AAApC,KAAf;AACAT,SAAKU,IAAL,CAAU,aAAV;AACH,GANC,GAMA,qGAPgB,CAAlB;AASA,MAAIC,WAAWhB,yBAAyBL,YAAzB,GAAwC,OAAvD;AACAM,cAAYgB,kBAAZ,CAA+BC,oBAA/B,EAAqDC,uBAArD,CAA6EH,QAA7E,EAAuF,IAAvF;AACA,MAAII,OAAOC,MAAMC,eAAN,CAAsBN,QAAtB,CAAX;AACAO,cAAYC,eAAZ,GAA8BC,QAA9B,CAAuCL,KAAKV,IAAL,EAAvC;AAED;AAAA,C","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/script.js\");\n","export default function(context) {\n  \n  var doc = context.document\n  var artboard = doc.currentPage().currentArtboard() || doc.currentPage()\n\n  var artboardname = artboard.name()\n  context.document.showMessage(\"It's alive ðŸ™Œ\")\n  artboardname = artboardname.replace(/['|'|/|#|.|\\\\|\"|\"]/g,'')\n  var filename = NSTemporaryDirectory() + artboardname + \".png\"\n  var htmlContent = NSString.stringWithString_(\n    \"<html><head><title>PptxGenJS Examples/Demo Page</title><meta http-equiv='X-UA-Compatible' content='IE=edge;chrome=1'><script src='https://cdn.rawgit.com/gitbrent/PptxGenJS/v2.2.0/examples/images/base64Images.js'></script><script src='https://cdn.rawgit.com/gitbrent/PptxGenJS/v2.2.0/dist/pptxgen.colors.js'></script><script src='https://cdn.rawgit.com/gitbrent/PptxGenJS/v2.2.0/dist/pptxgen.bundle.js'></script><script src='https://cdn.rawgit.com/gitbrent/PptxGenJS/v2.2.0/examples/pptxgenjs-demo.js'></script><script src='https://cdn.rawgit.com/gitbrent/PptxGenJS/v2.2.0/dist/pptxgen.shapes.js'></script></head><body><script>\"+function doTestSimpleImage() {\n      var pptx = new PptxGenJS();\n      var slide = pptx.addNewSlide();\n      // EX: Image by local URL\n      slide.addImage({ path:filename, x:1, y:1, w:4.0, h:4.0 });\n      pptx.save('Demo-Images');\n  }+\"</script><input type='button' value='Basic Slide Demo' onclick='doTestSimpleImage()'></body></html>\"\n  );\n  var filepath = NSTemporaryDirectory() + artboardname + \".html\";\n  htmlContent.dataUsingEncoding_(NSUTF8StringEncoding).writeToFile_atomically_(filepath, true);\n  var file = NSURL.fileURLWithPath(filepath)\n  NSWorkspace.sharedWorkspace().openFile(file.path())\n\n}; \n\n\n"],"sourceRoot":""}